// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewCloudWatchLogEvent Construct(NewCloudWatchLogEvent):  Snapshot Test 1`] = `
{
  "Resources": {
    "CustomKey1E6D0D07": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyExistingIam1584FEB7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKey2287F5A9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyExistingIamC416D475": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "NewCloudWatchLogEventExistingIamLambdaDlqFD18FDB8": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "The SQS queue does not have a dead-letter queue (DLQ) enabled or have a cdk_nag rule suppression indicating it is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "SqsManagedSseEnabled": true,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogEventExistingIamLambdaDlqPolicyF82E9B8B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventExistingIamLambdaDlqFD18FDB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "NewCloudWatchLogEventExistingIamLambdaDlqFD18FDB8",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ContentBasedDeduplication": true,
        "DelaySeconds": 600,
        "FifoQueue": true,
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "NewCloudWatchLogEventExistingIamLogEventQueueDlqF5C18C54",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
        "SqsManagedSseEnabled": true,
        "VisibilityTimeout": 900,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogEventExistingIamLogEventQueueDlqF5C18C54": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "The SQS queue does not have a dead-letter queue (DLQ) enabled or have a cdk_nag rule suppression indicating it is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "FifoQueue": true,
        "MessageRetentionPeriod": 1209600,
        "SqsManagedSseEnabled": true,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogEventExistingIamLogEventQueueDlqPolicy3F880AEC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventExistingIamLogEventQueueDlqF5C18C54",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "NewCloudWatchLogEventExistingIamLogEventQueueDlqF5C18C54",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "NewCloudWatchLogEventExistingIamLogEventQueuePolicy3EDE9223": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "NewCloudWatchLogEventExistingIamNewLogGroupCreatedRuleED930315",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "NewCloudWatchLogEventExistingIamNewLogGroupCreatedRuleED930315": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "eventName": [
              "CreateLogGroup",
            ],
            "eventSource": [
              "logs.amazonaws.com",
            ],
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.logs",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputPath": "$.detail",
            "RetryPolicy": {
              "MaximumRetryAttempts": 3,
            },
            "SqsParameters": {
              "MessageGroupId": "logEvents",
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionA6186161": {
      "DependsOn": [
        "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy9013F7C6",
        "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleF75C2E9E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "NewCloudWatchLogEventExistingIamLambdaDlqFD18FDB8",
              "Arn",
            ],
          },
        },
        "Environment": {
          "Variables": {
            "LogDestination": "LogRetentionArn",
            "LogKmsKeyArn": {
              "Fn::GetAtt": [
                "CustomKeyExistingIam1584FEB7",
                "Arn",
              ],
            },
            "LogRetention": "731",
            "LogSubscriptionRole": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/AWSAcceleratorLogReplicationRole-",
                  {
                    "Ref": "AWS::Region",
                  },
                ],
              ],
            },
            "LogSubscriptionType": "ACCOUNT",
          },
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyExistingIamC416D475",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleF75C2E9E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy9013F7C6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:AssociateKmsKey",
                "logs:DescribeLogGroups",
                "logs:DescribeSubscriptionFilters",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:PutSubscriptionFilter",
                "logs:DeleteSubscriptionFilter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":some-account-id:destination:*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventExistingIamLambdaDlqFD18FDB8",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy9013F7C6",
        "Roles": [
          {
            "Ref": "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleF75C2E9E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionServiceRoleF75C2E9E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionSqsEventSourceNewCloudWatchLogEventExistingIamLogEventQueue27F6A378D3968B64": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "NewCloudWatchLogEventExistingIamLogEventQueueA8EA07E5",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "NewCloudWatchLogEventExistingIamSetLogRetentionSubscriptionFunctionA6186161",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "NewCloudWatchLogEventLambdaDlq76368638": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "The SQS queue does not have a dead-letter queue (DLQ) enabled or have a cdk_nag rule suppression indicating it is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "SqsManagedSseEnabled": true,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogEventLambdaDlqPolicy59776401": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventLambdaDlq76368638",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "NewCloudWatchLogEventLambdaDlq76368638",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "NewCloudWatchLogEventLogEventQueueC499B0F2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ContentBasedDeduplication": true,
        "DelaySeconds": 600,
        "FifoQueue": true,
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "NewCloudWatchLogEventLogEventQueueDlq5C08DBE2",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
        "SqsManagedSseEnabled": true,
        "VisibilityTimeout": 900,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogEventLogEventQueueDlq5C08DBE2": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "The SQS queue does not have a dead-letter queue (DLQ) enabled or have a cdk_nag rule suppression indicating it is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "FifoQueue": true,
        "MessageRetentionPeriod": 1209600,
        "SqsManagedSseEnabled": true,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogEventLogEventQueueDlqPolicy5D76AEC7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventLogEventQueueDlq5C08DBE2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "NewCloudWatchLogEventLogEventQueueDlq5C08DBE2",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "NewCloudWatchLogEventLogEventQueuePolicy55C05856": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventLogEventQueueC499B0F2",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "NewCloudWatchLogEventNewLogGroupCreatedRuleB25856AE",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventLogEventQueueC499B0F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "NewCloudWatchLogEventLogEventQueueC499B0F2",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "NewCloudWatchLogEventNewLogGroupCreatedRuleB25856AE": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "eventName": [
              "CreateLogGroup",
            ],
            "eventSource": [
              "logs.amazonaws.com",
            ],
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.logs",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NewCloudWatchLogEventLogEventQueueC499B0F2",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputPath": "$.detail",
            "RetryPolicy": {
              "MaximumRetryAttempts": 3,
            },
            "SqsParameters": {
              "MessageGroupId": "logEvents",
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NewCloudWatchLogEventSetLogRetentionSubscriptionFunction0F748D41": {
      "DependsOn": [
        "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy99B4E143",
        "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRole3A975055",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "NewCloudWatchLogEventLambdaDlq76368638",
              "Arn",
            ],
          },
        },
        "Environment": {
          "Variables": {
            "LogDestination": "LogRetentionArn",
            "LogKmsKeyArn": {
              "Fn::GetAtt": [
                "CustomKey1E6D0D07",
                "Arn",
              ],
            },
            "LogRetention": "731",
            "LogSubscriptionRole": "testString",
            "LogSubscriptionType": "LOG_GROUP",
          },
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKey2287F5A9",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRole3A975055",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRole3A975055": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy99B4E143": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:AssociateKmsKey",
                "logs:DescribeLogGroups",
                "logs:DescribeSubscriptionFilters",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:PutSubscriptionFilter",
                "logs:DeleteSubscriptionFilter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":some-account-id:destination:*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventLambdaDlq76368638",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "NewCloudWatchLogEventLogEventQueueC499B0F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy99B4E143",
        "Roles": [
          {
            "Ref": "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionServiceRole3A975055",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NewCloudWatchLogEventSetLogRetentionSubscriptionFunctionSqsEventSourceNewCloudWatchLogEventLogEventQueue8D602D3891F72CE0": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "NewCloudWatchLogEventLogEventQueueC499B0F2",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "NewCloudWatchLogEventSetLogRetentionSubscriptionFunction0F748D41",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
}
`;
