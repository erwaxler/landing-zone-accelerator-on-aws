// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloudWatchToS3Firehose Construct(CloudWatchToS3Firehose):  Snapshot Test 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Resources": {
    "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyBucketName076BAD56",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamBucketName9F2BF3F7",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseKinesisStreamServiceRole9577C2D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamBucketName9F2BF3F7",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKeyBucketNameFF6F8D94",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF": {
      "DependsOn": [
        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3",
        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamBucketName9F2BF3F7",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyBucketNameF1E215CD",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamBucketName9F2BF3F7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyBucketNameFF6F8D94",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseServiceRole9EBB7E56": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition",
                            },
                            ":s3:::somebucket/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKeyBucketName4DE2ADC8",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::somebucket",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::somebucket/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyBucketName076BAD56",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseStream3C376F34": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::somebucket",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyBucketName4DE2ADC8",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseBucketNameFirehoseServiceRole9EBB7E56",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamBucketName9F2BF3F7",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseBucketNameFirehoseKinesisStreamServiceRole9577C2D5",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseCloudWatchLogStream4369D67C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyExistingIamA40FEFF2",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamExistingIamFE5F8092",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaF852AD4B": {
      "DependsOn": [
        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D",
        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamExistingIamFE5F8092",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyExistingIamC416D475",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamExistingIamFE5F8092",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyExistingIam19145315",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseStream48CF661F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::somebucket",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudWatchLogStream4369D67C",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyExistingIam1584FEB7",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaF852AD4B",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/AWSAcceleratorFirehoseRole",
              ],
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamExistingIamFE5F8092",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/AWSAcceleratorFirehoseRole",
              ],
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyA36F38C8",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamE8E9158E",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseFirehoseKinesisStreamServiceRole80E25BD8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamE8E9158E",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKey1382C574",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603": {
      "DependsOn": [
        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579",
        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamE8E9158E",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKey2287F5A9",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamE8E9158E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKey1382C574",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseFirehoseServiceRole4A1CF56B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "CustomBucketF81FA714",
                                "Arn",
                              ],
                            },
                            "/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKey1E6D0D07",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CustomBucketF81FA714",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CustomBucketF81FA714",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyA36F38C8",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehoseStream0CBF097E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CustomBucketF81FA714",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKey1E6D0D07",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseFirehoseServiceRole4A1CF56B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamE8E9158E",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseFirehoseKinesisStreamServiceRole80E25BD8",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CustomBucketF81FA714": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKey1E6D0D07": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyBucketName4DE2ADC8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyExistingIam1584FEB7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKey1382C574": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyBucketNameFF6F8D94": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyExistingIam19145315": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKey2287F5A9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyBucketNameF1E215CD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyExistingIamC416D475": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyA36F38C8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyBucketName076BAD56": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyExistingIamA40FEFF2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamBucketName9F2BF3F7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamE8E9158E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamExistingIamFE5F8092": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`CloudWatchToS3FirehoseBucketName Construct(CloudWatchToS3Firehose):  Snapshot Test 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Resources": {
    "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyBucketName076BAD56",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamBucketName9F2BF3F7",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseKinesisStreamServiceRole9577C2D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamBucketName9F2BF3F7",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKeyBucketNameFF6F8D94",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF": {
      "DependsOn": [
        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3",
        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamBucketName9F2BF3F7",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyBucketNameF1E215CD",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamBucketName9F2BF3F7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyBucketNameFF6F8D94",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseServiceRole9EBB7E56": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition",
                            },
                            ":s3:::somebucket/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKeyBucketName4DE2ADC8",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::somebucket",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::somebucket/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyBucketName076BAD56",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseStream3C376F34": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::somebucket",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyBucketName4DE2ADC8",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseBucketNameFirehoseServiceRole9EBB7E56",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamBucketName9F2BF3F7",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseBucketNameFirehoseKinesisStreamServiceRole9577C2D5",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseCloudWatchLogStream4369D67C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyExistingIamA40FEFF2",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamExistingIamFE5F8092",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaF852AD4B": {
      "DependsOn": [
        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D",
        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamExistingIamFE5F8092",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyExistingIamC416D475",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamExistingIamFE5F8092",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyExistingIam19145315",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseStream48CF661F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::somebucket",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudWatchLogStream4369D67C",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyExistingIam1584FEB7",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaF852AD4B",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/AWSAcceleratorFirehoseRole",
              ],
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamExistingIamFE5F8092",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/AWSAcceleratorFirehoseRole",
              ],
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyA36F38C8",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamE8E9158E",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseFirehoseKinesisStreamServiceRole80E25BD8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamE8E9158E",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKey1382C574",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603": {
      "DependsOn": [
        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579",
        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamE8E9158E",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKey2287F5A9",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamE8E9158E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKey1382C574",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseFirehoseServiceRole4A1CF56B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "CustomBucketF81FA714",
                                "Arn",
                              ],
                            },
                            "/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKey1E6D0D07",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CustomBucketF81FA714",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CustomBucketF81FA714",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyA36F38C8",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehoseStream0CBF097E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CustomBucketF81FA714",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKey1E6D0D07",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseFirehoseServiceRole4A1CF56B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamE8E9158E",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseFirehoseKinesisStreamServiceRole80E25BD8",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CustomBucketF81FA714": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKey1E6D0D07": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyBucketName4DE2ADC8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyExistingIam1584FEB7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKey1382C574": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyBucketNameFF6F8D94": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyExistingIam19145315": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKey2287F5A9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyBucketNameF1E215CD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyExistingIamC416D475": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyA36F38C8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyBucketName076BAD56": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyExistingIamA40FEFF2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamBucketName9F2BF3F7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamE8E9158E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamExistingIamFE5F8092": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`CloudWatchToS3FirehoseExistingIam Construct(CloudWatchToS3Firehose):  Snapshot Test 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Resources": {
    "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyBucketName076BAD56",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamBucketName9F2BF3F7",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseKinesisStreamServiceRole9577C2D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamBucketName9F2BF3F7",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKeyBucketNameFF6F8D94",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF": {
      "DependsOn": [
        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3",
        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamBucketName9F2BF3F7",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyBucketNameF1E215CD",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamBucketName9F2BF3F7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyBucketNameFF6F8D94",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyA2E491F3",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambdaServiceRoleFA79B6BB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseServiceRole9EBB7E56": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition",
                            },
                            ":s3:::somebucket/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKeyBucketName4DE2ADC8",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::somebucket",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::somebucket/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyBucketName076BAD56",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseBucketNameFirehoseStream3C376F34": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::somebucket",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudwatchLogs2559CE32",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseBucketNameFirehoseCloudWatchLogStreamC585C3CD",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyBucketName4DE2ADC8",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseBucketNameFirehosePrefixProcessingLambda2F1022EF",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseBucketNameFirehoseServiceRole9EBB7E56",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamBucketName9F2BF3F7",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseBucketNameFirehoseKinesisStreamServiceRole9577C2D5",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseCloudWatchLogStream4369D67C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyExistingIamA40FEFF2",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamExistingIamFE5F8092",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaF852AD4B": {
      "DependsOn": [
        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D",
        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamExistingIamFE5F8092",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyExistingIamC416D475",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamExistingIamFE5F8092",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyExistingIam19145315",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC384F73D",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaServiceRoleCC09E565",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseExistingIamFirehoseStream48CF661F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::somebucket",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudwatchLogsE7A42868",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseExistingIamFirehoseCloudWatchLogStream4369D67C",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyExistingIam1584FEB7",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseExistingIamFirehosePrefixProcessingLambdaF852AD4B",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/AWSAcceleratorFirehoseRole",
              ],
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamExistingIamFE5F8092",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/AWSAcceleratorFirehoseRole",
              ],
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyA36F38C8",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamE8E9158E",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseFirehoseKinesisStreamServiceRole80E25BD8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamE8E9158E",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKey1382C574",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603": {
      "DependsOn": [
        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579",
        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamE8E9158E",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKey2287F5A9",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamE8E9158E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKey1382C574",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy65018579",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaServiceRole405E5167",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseFirehoseServiceRole4A1CF56B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "CustomBucketF81FA714",
                                "Arn",
                              ],
                            },
                            "/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKey1E6D0D07",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CustomBucketF81FA714",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CustomBucketF81FA714",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyA36F38C8",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseFirehoseStream0CBF097E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CustomBucketF81FA714",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseFirehoseCloudwatchLogs25E5D35A",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseFirehoseCloudWatchLogStream3886AD4D",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKey1E6D0D07",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseFirehosePrefixProcessingLambdaE5E42603",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseFirehoseServiceRole4A1CF56B",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamE8E9158E",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseFirehoseKinesisStreamServiceRole80E25BD8",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CustomBucketError0C6799CA": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomBucketF81FA714": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKey1E6D0D07": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyBucketErrorNameE8899342": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyBucketName4DE2ADC8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKeyExistingIam1584FEB7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKey1382C574": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyBucketErrorName644A5508": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyBucketNameFF6F8D94": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyExistingIam19145315": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKey2287F5A9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyBucketErrorName34834C98": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyBucketNameF1E215CD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyExistingIamC416D475": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyA36F38C8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyBucketErrorName6DEB7FC4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyBucketName076BAD56": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyExistingIamA40FEFF2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamBucketErrorNameEE021D38": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamBucketName9F2BF3F7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamE8E9158E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamExistingIamFE5F8092": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`DynamicPartitioningByAccountId Tests Undefined Account ID Partitioning Construct(CloudWatchToS3Firehose):  Snapshot Test 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Resources": {
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudWatchLogStreamE7B2ED7B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudwatchLogs876C90EB",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudwatchLogs876C90EB": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyUndefinedAccountId5FB04897",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamUndefinedAccountId4A70AB89",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseKinesisStreamServiceRoleD3CC2928": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamUndefinedAccountId4A70AB89",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKeyUndefinedAccountIdF645AA2C",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaF20A704E": {
      "DependsOn": [
        "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy9ECB8A8E",
        "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRole4E1FB012",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamUndefinedAccountId4A70AB89",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyUndefinedAccountIdA69F43FE",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRole4E1FB012",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRole4E1FB012": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy9ECB8A8E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamUndefinedAccountId4A70AB89",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyUndefinedAccountIdF645AA2C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicy9ECB8A8E",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaServiceRole4E1FB012",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseServiceRole2068CB11": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "TestBucketUndefinedAccountId35D1BAFA",
                                "Arn",
                              ],
                            },
                            "/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKeyUndefinedAccountId0C950A07",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "TestBucketUndefinedAccountId35D1BAFA",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "TestBucketUndefinedAccountId35D1BAFA",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaF20A704E",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaF20A704E",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudwatchLogs876C90EB",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudWatchLogStreamE7B2ED7B",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyUndefinedAccountId5FB04897",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseStreamCCF31BF1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TestBucketUndefinedAccountId35D1BAFA",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudwatchLogs876C90EB",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseCloudWatchLogStreamE7B2ED7B",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyUndefinedAccountId0C950A07",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseUndefinedAccountIdFirehosePrefixProcessingLambdaF20A704E",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseServiceRole2068CB11",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamUndefinedAccountId4A70AB89",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseUndefinedAccountIdFirehoseKinesisStreamServiceRoleD3CC2928",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CustomKeyUndefinedAccountId0C950A07": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyUndefinedAccountIdF645AA2C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyUndefinedAccountIdA69F43FE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyUndefinedAccountId5FB04897": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamUndefinedAccountId4A70AB89": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "TestBucketUndefinedAccountId35D1BAFA": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`DynamicPartitioningByAccountId Tests With Account ID Partitioning Construct(CloudWatchToS3Firehose):  Snapshot Test 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Resources": {
    "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudWatchLogStreamBDE87B44": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudwatchLogsF7452989",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudwatchLogsF7452989": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyWithAccountIdB9E982EF",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamWithAccountId5BBB93E3",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehoseKinesisStreamServiceRole4CE1E854": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamWithAccountId5BBB93E3",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKeyWithAccountIdAC154BA7",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambda1187F14A": {
      "DependsOn": [
        "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyF8B2BED9",
        "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRole91179FF4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "true",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamWithAccountId5BBB93E3",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyWithAccountIdFF00FAC0",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRole91179FF4",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRole91179FF4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyF8B2BED9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamWithAccountId5BBB93E3",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyWithAccountIdAC154BA7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyF8B2BED9",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambdaServiceRole91179FF4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehoseServiceRole44483B1C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "TestBucketWithAccountId8D329FD7",
                                "Arn",
                              ],
                            },
                            "/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKeyWithAccountIdBDB73254",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "TestBucketWithAccountId8D329FD7",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "TestBucketWithAccountId8D329FD7",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambda1187F14A",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambda1187F14A",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudwatchLogsF7452989",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudWatchLogStreamBDE87B44",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyWithAccountIdB9E982EF",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseWithAccountIdFirehoseStream3FA67630": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TestBucketWithAccountId8D329FD7",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudwatchLogsF7452989",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseWithAccountIdFirehoseCloudWatchLogStreamBDE87B44",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyWithAccountIdBDB73254",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseWithAccountIdFirehosePrefixProcessingLambda1187F14A",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseWithAccountIdFirehoseServiceRole44483B1C",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamWithAccountId5BBB93E3",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseWithAccountIdFirehoseKinesisStreamServiceRole4CE1E854",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CustomKeyWithAccountIdBDB73254": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyWithAccountIdAC154BA7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyWithAccountIdFF00FAC0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyWithAccountIdB9E982EF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamWithAccountId5BBB93E3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "TestBucketWithAccountId8D329FD7": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`DynamicPartitioningByAccountId Tests Without Account ID Partitioning Construct(CloudWatchToS3Firehose):  Snapshot Test 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Resources": {
    "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudWatchLogStream5B55E4F4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudwatchLogsCAEA517D",
        },
        "LogStreamName": "DestinationDeliveryError",
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudwatchLogsCAEA517D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "CustomLogsKeyWithoutAccountIdC7FCCCE6",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/accelerator/logs/firehose/",
              {
                "Ref": "CustomStreamWithoutAccountId53ACDCEE",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehoseKinesisStreamServiceRole24764830": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomStreamWithoutAccountId53ACDCEE",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKinesisKeyWithoutAccountId70163A62",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambda56329873": {
      "DependsOn": [
        "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC307ADE4",
        "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleA7248E18",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningByAccountId": "false",
            "DynamicS3LogPartitioningMapping": "dynamic-partitioning/log-filters.json",
            "KinesisStreamArn": {
              "Fn::GetAtt": [
                "CustomStreamWithoutAccountId53ACDCEE",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "CustomLambdaKeyWithoutAccountId52A8D8C8",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleA7248E18",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleA7248E18": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC307ADE4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:PutRecords",
                "kinesis:PutRecord",
                "kinesis:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomStreamWithoutAccountId53ACDCEE",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncryptTo",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:ReEncryptFrom",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomKinesisKeyWithoutAccountId70163A62",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleDefaultPolicyC307ADE4",
        "Roles": [
          {
            "Ref": "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambdaServiceRoleA7248E18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehoseServiceRoleE0816151": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.someregion.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "TestBucketWithoutAccountIdDA055EB0",
                                "Arn",
                              ],
                            },
                            "/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomKeyWithoutAccountId212A5623",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "TestBucketWithoutAccountIdDA055EB0",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "TestBucketWithoutAccountIdDA055EB0",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambda56329873",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambda56329873",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudwatchLogsCAEA517D",
                            "Arn",
                          ],
                        },
                        ":logstream:",
                        {
                          "Ref": "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudWatchLogStream5B55E4F4",
                        },
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Encrypt*",
                    "kms:Describe*",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CustomLogsKeyWithoutAccountIdC7FCCCE6",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudWatchToS3FirehoseWithoutAccountIdFirehoseStream0873147E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TestBucketWithoutAccountIdDA055EB0",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudwatchLogsCAEA517D",
            },
            "LogStreamName": {
              "Ref": "CloudWatchToS3FirehoseWithoutAccountIdFirehoseCloudWatchLogStream5B55E4F4",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": false,
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::GetAtt": [
                  "CustomKeyWithoutAccountId212A5623",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CloudWatchToS3FirehoseWithoutAccountIdFirehosePrefixProcessingLambda56329873",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseWithoutAccountIdFirehoseServiceRoleE0816151",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "CustomStreamWithoutAccountId53ACDCEE",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudWatchToS3FirehoseWithoutAccountIdFirehoseKinesisStreamServiceRole24764830",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CustomKeyWithoutAccountId212A5623": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomKinesisKeyWithoutAccountId70163A62": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLambdaKeyWithoutAccountId52A8D8C8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomLogsKeyWithoutAccountIdC7FCCCE6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomStreamWithoutAccountId53ACDCEE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Retain",
    },
    "TestBucketWithoutAccountIdDA055EB0": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
